{
  "name": "grunt-frontend",
  "description": "CSS and JS minifier that respects source modification",
  "version": "1.1.2",
  "homepage": "https://github.com/sergeche/grunt-frontend",
  "author": {
    "name": "Sergey Chikuyonok",
    "email": "serge.che@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sergeche/grunt-frontend.git"
  },
  "bugs": {
    "url": "https://github.com/sergeche/grunt-frontend/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sergeche/grunt-frontend/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt nodeunit"
  },
  "dependencies": {
    "underscore": ">=1.3.x",
    "csso": "*",
    "grunt-contrib-uglify": "~0.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "keywords": [
    "gruntplugin",
    "frontend",
    "front-end",
    "css",
    "js"
  ],
  "readme": "A [Grunt.js](http://gruntjs.com) task that compiles CSS and JS files with respect of _file modification_ date. For JS, it uses built-in [UglifyJS](https://github.com/mishoo/UglifyJS) minifier, for CSS — Yandex’s [CSSO](https://github.com/css/csso) with automatic `@import` inlining.\n\nUnlike basic minifiers, this task generates a hidden catalog file (`.build-catalog.json`) that stores state, last compilation date and md5 hashes of minified files. Every time you call `frontend` task, it will look into this catalog and check if the state of files being minified was changed. If not, the file _will not_ be re-minified which saves CPU time and _modification date_. This date (or md5 hash) can be used to modify URLs to minified files for effective caching.\n\n## Usage ##\n\nThis plugin provides `frontend` task. Here’s example `grunt.js` file:\n\n```js\nmodule.exports = function(grunt) {\n\n    // Project configuration.\n    grunt.initConfig({\n        frontend: {\n            // `frontend` is a multi-task\n            main: {\n                // task options\n                options: {\n                    // Force file minification even if they were not modified\n                    force: false,\n        \n                    // Path to project sources root folder.\n                    // It is used to resolve absolute paths in CSS imports,\n                    // for example: @import \"/css/file.css\" will be resolved \n                    // to './src/files/css/file.css'\n                    srcWebroot: './src/files',\n        \n                    // Destination root folder.\n                    // Used to update minified files paths in catalog,\n                    // e.g. instead of storing '/Users/foo/project/out/css/minified.css' path, \n                    // task will cut-out path to webroot and store '/css/minified.css' instead\n                    webroot: './out'\n                },\n                \n                 // CSS subtask: find all CSS files in `src` folder and \n                // store minified version in `dest` folder\n                css: {\n                    src: './src/css',\n                    dest: './out/css'\n                },\n                \n                // JS subtask: works pretty much the same as default \n                // `min` task:\n                // https://github.com/gruntjs/grunt/blob/master/docs/task_min.md\n                js: {\n                    './out/js/f1.js': [\n                        './src/js/fileA.js',\n                        './src/js/fileB.js'\n                    ],\n    \n                    './out/js/f2.js': [\n                        './src/js/fileC.js',\n                        './src/js/fileD.js'\n                    ]\n                }\n            }\n        }\n    });\n};\n```\n\nThis task can be used together with [docpad-plugin-frontend](https://github.com/sergeche/docpad-plugin-frontend) to automatically generate cache-effective URLs to assets for [DocPad](https://github.com/bevry/docpad)-generated web-site.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-frontend@1.1.2",
  "dist": {
    "shasum": "4b1b65c02bf9061d1e7d8098e791b339ff17804b"
  },
  "_from": "grunt-frontend@",
  "_resolved": "https://registry.npmjs.org/grunt-frontend/-/grunt-frontend-1.1.2.tgz"
}
