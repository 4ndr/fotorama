{
  "name": "docpad-plugin-associatedfiles",
  "version": "2.1.3",
  "description": "DocPad plugin that fetches any associated files for our particular document",
  "homepage": "http://docpad.org/plugin/associatedfiles",
  "keywords": [
    "docpad",
    "docpad-plugin",
    "associations",
    "associated",
    "files"
  ],
  "author": {
    "name": "Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "contributors": [
    {
      "name": "Morgan Sutherland",
      "email": "morgan@msutherl.net"
    },
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    },
    {
      "name": "jonathanh32",
      "url": "https://github.com/jonathanh32"
    }
  ],
  "bugs": {
    "url": "http://docpad.org/plugin/associatedfiles/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/docpad/docpad-plugin-associatedfiles.git"
  },
  "engines": {
    "node": ">=0.4",
    "docpad": ">=6.1 <7"
  },
  "devDependencies": {
    "coffee-script": "~1.4.0"
  },
  "main": "./out/associatedfiles.plugin.js",
  "scripts": {
    "test": "node ./test/associatedfiles.test.js"
  },
  "readme": "# Associated Files Plugin for DocPad\nThis plugin streamlines finding associated files for a particular document in [DocPad](https://docpad.org), which is useful for:\n- getting images for a gallery\n- getting downloads for an article\n- etc. etc.\n\n\n\n## Install\n\n```\nnpm install --save docpad-plugin-associatedfiles\n```\n\n\n\n## Usage\n\nThe way it works is by looking into `src/files/associated-files/#{document.associatedFilesDirectory or document.basename}` for files. Where `associatedFilesDirectory` is set in your document's meta data, and if it doesn't exist it will use the document's basename (e.g. the basename of `my-holiday-2012.html.eco` is `my-holiday-2012`). Any files inside that path will be associated to your document, and retrieveable by `@getDocument().getAssociatedFiles()`\n\nLets see how this works, we have the document `src/documents/my-holiday-2012.html.eco`:\n\n``` html\n---\ntitle: My Holiday in 2012\n---\n\n<h2>Here are some great photos from our trip</h2>\n\n<% for file in @getDocument().getAssociatedFiles(): %>\n<p>\n\t<h3><%= file.title or file.name %></h3>\n\t<img src=\"<%= file.url %>\" title=\"<%= file.title or file.name %>\" />\n</p>\n<% end %>\n```\n\nThen we will stick a few images inside our path: `src/files/associated-files/my-holiday-2012`. And we'll end up with the rendered result:\n\n``` html\n<h2>Here are some great photos from our trip</h2>\n\n<p>\n\t<h3>sweet-sweet-beach.jpg</h3>\n\t<img src=\"/associated-files/my-holiday-2012/sweet-sweet-beach.jpg\" title=\"sweet-sweet-beach.jpg\" />\n</p>\n\n<p>\n\t<h3>sweet-sweet-icecream.jpg</h3>\n\t<img src=\"/associated-files/my-holiday-2012/sweet-sweet-icecream.jpg\" title=\"sweet-sweet-icecream.jpg\" />\n</p>\n```\n\nIns't that cool?\n\n\n## History\nYou can discover the history inside the `History.md` file\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2012+ [Bevry Pty Ltd](http://bevry.me)\n\n## Contributors\n- [Benjamin Lupton](http://balupton.com)\n- [Morgan Sutherland](http://msutherl.net)\n",
  "readmeFilename": "README.md",
  "_id": "docpad-plugin-associatedfiles@2.1.3",
  "_from": "docpad-plugin-associatedfiles@"
}
